"""03

Revision ID: 6f1ec96f8a95
Revises: 515a6ad2f07c
Create Date: 2022-05-11 18:01:07.395797

"""
from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6f1ec96f8a95'
down_revision = '515a6ad2f07c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
 
    op.create_table('plominodoc',
    sa.Column('id_istanza', sa.Integer(), nullable=False),
    sa.Column('id_plomino', sa.String(length=80), nullable=True),
    sa.Column('owner_id', sa.String(length=256), nullable=True),
    sa.Column('items', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id_istanza'),
    schema='sue'
    )
    op.create_index(op.f('ix_sue_plominodoc_id_istanza'), 'plominodoc', ['id_istanza'], unique=False, schema='sue')
    op.create_index(op.f('ix_sue_plominodoc_id_plomino'), 'plominodoc', ['id_plomino'], unique=False, schema='sue')
 
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('project_users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_users_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='project_users_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_users_pkey')
    )
    op.create_table('Detail',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Detail_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Detail_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ItemDetail',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"ItemDetail_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('itemId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('detailId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('endDate', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['detailId'], ['Detail.id'], name='ItemDetail_detailId_fkey'),
    sa.ForeignKeyConstraint(['itemId'], ['Item.id'], name='ItemDetail_itemId_fkey'),
    sa.PrimaryKeyConstraint('id', name='ItemDetail_pkey')
    )
    op.create_table('Item',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Item_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Item_pkey')
    )
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='projects_pkey')
    )
    op.drop_index(op.f('ix_sue_uiu_id'), table_name='uiu', schema='sue')
    op.drop_table('uiu', schema='sue')
    op.drop_index(op.f('ix_sue_tecnici_id'), table_name='tecnici', schema='sue')
    op.drop_table('tecnici', schema='sue')
    op.drop_index(op.f('ix_sue_richiedenti_id'), table_name='richiedenti', schema='sue')
    op.drop_table('richiedenti', schema='sue')
    op.drop_index(op.f('ix_sue_nct_id'), table_name='nct', schema='sue')
    op.drop_table('nct', schema='sue')
    op.drop_index(op.f('ix_sue_esecutori_id'), table_name='esecutori', schema='sue')
    op.drop_table('esecutori', schema='sue')
    op.drop_index(op.f('ix_sue_civici_id'), table_name='civici', schema='sue')
    op.drop_table('civici', schema='sue')
    op.drop_index(op.f('ix_varie_item_title'), table_name='item', schema='varie')
    op.drop_index(op.f('ix_varie_item_id'), table_name='item', schema='varie')
    op.drop_index(op.f('ix_varie_item_description'), table_name='item', schema='varie')
    op.drop_table('item', schema='varie')
    op.drop_index(op.f('ix_sue_istanza_id_pratica'), table_name='istanza', schema='sue')
    op.drop_index(op.f('ix_sue_istanza_id_istanza'), table_name='istanza', schema='sue')
    op.drop_table('istanza', schema='sue')
    op.drop_index(op.f('ix_ricette_recipe_url'), table_name='recipe', schema='ricette')
    op.drop_index(op.f('ix_ricette_recipe_id'), table_name='recipe', schema='ricette')
    op.drop_table('recipe', schema='ricette')
    op.drop_index(op.f('ix_utenti_user_id'), table_name='user', schema='utenti')
    op.drop_index(op.f('ix_utenti_user_full_name'), table_name='user', schema='utenti')
    op.drop_index(op.f('ix_utenti_user_email'), table_name='user', schema='utenti')
    op.drop_table('user', schema='utenti')
    op.drop_index(op.f('ix_sue_tecnico_id_tecnico'), table_name='tecnico', schema='sue')
    op.drop_table('tecnico', schema='sue')
    op.drop_index(op.f('ix_sue_plominodoc_id_plomino'), table_name='plominodoc', schema='sue')
    op.drop_index(op.f('ix_sue_plominodoc_id_istanza'), table_name='plominodoc', schema='sue')
    op.drop_table('plominodoc', schema='sue')
    op.drop_index(op.f('ix_sue_giuridica_id_giuridica'), table_name='giuridica', schema='sue')
    op.drop_table('giuridica', schema='sue')
    op.drop_index(op.f('ix_sue_fisica_id_fisica'), table_name='fisica', schema='sue')
    op.drop_table('fisica', schema='sue')
    op.drop_index(op.f('ix_sue_esecutore_id_esecutore'), table_name='esecutore', schema='sue')
    op.drop_table('esecutore', schema='sue')
    op.drop_index(op.f('ix_sue_condominio_id_condominio'), table_name='condominio', schema='sue')
    op.drop_table('condominio', schema='sue')
    # ### end Alembic commands ###
